#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<stdbool.h>

#define max 255
#define TABLESIZE 10

typedef struct persoana
{
    char name[max];
    int age;
    struct persoana *pnext;
}persoana,*ppersoana,**pppersoana;

ppersoana hash_table[TABLESIZE];

void initializare()
{
    for(int i=0;i<TABLESIZE;i++)
    {
        hash_table[i]=NULL;
    }
}

unsigned int hash(char *name)
{
    int lungime=strnlen(name,max);
    unsigned int hash_value=0;
    for(int i=0;i<lungime;i++)
    {
        hash_value=hash_value+name[i];
        hash_value=(hash_value*name[i]) % TABLESIZE;
    }

    return hash_value;

}

void afisare()
{
    printf("Start:\n");
    for(int i=0;i<TABLESIZE;i++)
    {
        if(hash_table[i]==NULL)
        {
            printf("\n%i -- \n", i);
        }
        else
        {
            ppersoana temp;
            temp=(ppersoana)malloc(sizeof(persoana));
            temp=hash_table[i];
            printf("\n%i ",i);
            while (temp!=NULL)
            {
                printf("%s  ",temp->name);
                temp=temp->pnext;
                
            } 
            
        }


    }
    printf("End\n");
}

bool adaugare()
{
    ppersoana p;
    p=(ppersoana)malloc(sizeof(persoana));
    printf("\n Adaugati numele dorit:");
    scanf("%s", p->name);

    int index=hash(p->name);
    if(hash_table[index]==NULL)
    {
        hash_table[index]=p;
    }
    else
    {
        //return false;
        p->pnext=hash_table[index];
        hash_table[index]=p;
    }

    return true;

}

bool cauta()
{
    char *name;
    //Alocam dinamic memorie intrucat *name nu are memorie pointata spre nicaieri
    name=(char*)malloc(max*sizeof(char));
    ppersoana temp;

    printf("\nIntroduceti numele cautat:\n");
    scanf("%s", name);
    int index=hash(name);

    if(hash_table[index]!=NULL && strcmp(hash_table[index]->name,name)==0)
    {
        printf("Numele %s este in Tabela.\n", name);
        free(name);
        return true;
    }
    else
    {
        
        for(int i=0;i<TABLESIZE;i++)
        {
            
            temp=hash_table[i];

            while(temp!=NULL)
            {
                if(temp!=NULL && strcmp(temp->name,name)==0)
             {
                   printf("Numele %s este in Tabela.\n", name);
                   return true;
             }

                temp=temp->pnext;
            }

            
        }

        printf("Numele %s nu s-a gasit.", name);
        return false;
        
    }

}

bool sterge()
{
    char *name;
    name=(char*)malloc(max*sizeof(char));
    ppersoana temp;
    ppersoana q;
    int i;
    printf("\nIntroduceti numele de sters:");
    scanf("%s", name);

    int index=hash(name);

    if(hash_table[index]!=NULL && strcmp(hash_table[index]->name,name)==0)
    {
        //caz in care e primul element din tabela
        if(hash_table[index]->pnext==NULL)
        {

            hash_table[index]=NULL;
            return true;
        }
        else //este primul element dar urmeaza altele
        {
            
            temp=hash_table[index];
            hash_table[index]=hash_table[index]->pnext;
            free(temp);
            return true;
        }
    }

    //cazul in care nu e primul nume
    else
    {
        temp=hash_table[index];

        while(hash_table[index]!=NULL)
        {
            if(hash_table[index]!=NULL && strcmp(hash_table[index]->pnext->name,name)==0)
            {
                q=hash_table[index]->pnext;
                hash_table[index]->pnext=q->pnext;
                free(q);
                hash_table[index]=temp;
                return true;
            }
            
            hash_table[index]=hash_table[index]->pnext;

        }
        
    }

    printf("\n Numele dorit de eliminat nu s-a gasit.\n");
    return false;
}

void meniu()
{
    initializare();
    int sel;
    int i,n;
    int cautare;
    printf("Selectati operatiunea dorita:\n1.Adaugare.\n2.Cautare\n3.Afisare\n4.Stergere\n0.Finalizare \nIntroduceti:");
    scanf("%i", &sel);

    while(sel!=0)
    {
         if(sel==1)
    {
         printf("\nAdaugati numarul de persoana:");
         scanf("%i", &n);

     for(i=0;i<n;i++)
         {
           adaugare();
         }
    }

    if(sel==2)
    {
        printf("\nIntroduceti numarul de persoane cautate:");
        scanf("%i", &cautare);
        for(i=0;i<cautare;i++)
        {
            cauta();
        }
    }

    if(sel==3)
    {
        afisare();
    }

    if(sel==4)
    {
        sterge();
    }

            printf("\nIntroduceti urmatoarea comanda:");
            scanf("%i", &sel);

    }
   

    printf("\nFinalizare.\n");
    


}


int main()
{
    initializare();
    //afisare();

    meniu();

    return 0;


}
